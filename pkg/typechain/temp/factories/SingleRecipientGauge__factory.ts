/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Contract, Signer, utils} from "ethers";
import {Provider} from "@ethersproject/providers";
import type {
  SingleRecipientGauge,
  SingleRecipientGaugeInterface,
} from "../SingleRecipientGauge";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBalancerMinter",
        name: "minter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodEmissions",
        type: "uint256",
      },
    ],
    name: "Checkpoint",
    type: "event",
  },
  {
    inputs: [],
    name: "checkpoint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "integrate_fraction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "is_killed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "killGauge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unkillGauge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "user_checkpoint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class SingleRecipientGauge__factory {
  static readonly abi = _abi;
  static createInterface(): SingleRecipientGaugeInterface {
    return new utils.Interface(_abi) as SingleRecipientGaugeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleRecipientGauge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SingleRecipientGauge;
  }
}
