/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Contract, Signer, utils} from "ethers";
import {Provider} from "@ethersproject/providers";
import type {
  SingleRecipientGaugeFactory,
  SingleRecipientGaugeFactoryInterface,
} from "../SingleRecipientGaugeFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBalancerMinter",
        name: "minter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "gauge",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "SingleRecipientGaugeCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGaugeImplementation",
    outputs: [
      {
        internalType: "contract ISingleRecipientGauge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gauge",
        type: "address",
      },
    ],
    name: "getGaugeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientGauge",
    outputs: [
      {
        internalType: "contract ILiquidityGauge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gauge",
        type: "address",
      },
    ],
    name: "isGaugeFromFactory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class SingleRecipientGaugeFactory__factory {
  static readonly abi = _abi;
  static createInterface(): SingleRecipientGaugeFactoryInterface {
    return new utils.Interface(_abi) as SingleRecipientGaugeFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleRecipientGaugeFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SingleRecipientGaugeFactory;
  }
}
